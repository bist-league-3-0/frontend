@mixin button($string: "primary-filled") {
  // ERROR HANDLING
  @if type-of($string) != string {
    @error "Sorry, the $string value must be string type on button mixin";
  }

  // LAYOUT
  @include boxsizing-x("button");
  @include boxsizing-y("button");

  // FONT
  @include typography("p");
  font-weight: 400;

  // FLEX
  display: flex;
  justify-content: center;
  align-items: center;

  // ANIMATION
  transition: $defaultTransition;

  // CURSOR
  cursor: pointer;

  // COLOR
  $color-bg: map-get($color, "primary-1");
  $border: map-get($color, "primary-1");
  $color-text: map-get($color, "white");
  $color-bg-hover: map-get($color, "primary-2");
  $border-hover: map-get($color, "primary-2");

  @if $string == "primary" {
    $color-bg: map-get($color, "white");
    $border: map-get($color, "primary-1");
    $color-text: map-get($color, "primary-1");
    $color-bg-hover: rgba(map-get($color, "primary-1"), 0.1);
    $border-hover: map-get($color, "primary-1");
  } 
  @else if $string == "secondary-filled" {
    $color-bg: map-get($color, "secondary-1");
    $border: map-get($color, "secondary-1");
    $color-text: map-get($color, "white");
    $color-bg-hover: map-get($color, "secondary-2");
    $border-hover: map-get($color, "secondary-2");
  } 
  @else if $string == "secondary" {
    $color-bg: map-get($color, "white");
    $border: map-get($color, "secondary-1");
    $color-text: map-get($color, "secondary-1");
    $color-bg-hover: rgba(map-get($color, "primary-1"), 0.1);
    $border-hover: map-get($color, "primary-1");
  } 
  @else if $string == "primary-washed-filled" {
    $color-bg: scale-color($color-primary-1, $alpha: -95%);
    $border: transparent;
    $color-text: $color-primary-1;
    $color-bg-hover: scale-color($color-primary-1, $alpha: -90%);
    $border-hover: transparent;
  }

  background-color: $color-bg;
  border: remToVw($bp-medium, 0.2rem) solid $border;
  border-radius: remToVw($bp-medium, 0.5rem);
  color: $color-text;

  &:hover {
    border: remToVw($bp-medium, 0.2rem) solid $border-hover;
    background-color: $color-bg-hover;
  }

  &:active {
    opacity: 0.6;
  }

  &:disabled {
    opacity: 0.6;
  }
}

// Classes
.button-primary {
  @include button("primary");
}

.button-primary-filled {
  @include button("primary-filled");
}

.button-secondary {
  @include button("secondary");
}

.button-secondary-filled {
  @include button("secondary-filled");
}

.button-primary-washed-filled {
  @include button("primary-washed-filled");
}

.clickable {
  cursor: pointer;
}

.button-group {
  display: flex;
  flex-direction: row;

  & > *:not(:last-child) {
    @include fluid("margin-right", 1.2rem, 2rem);
  }
}