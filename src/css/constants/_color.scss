// Constant: Colors
$color: (
  "primary-1": #84002f,
  "primary-2": #30022c,
  "primary-3": #7f6add,
  "secondary-1": #cc002f,
  "secondary-2": #f31a1e,
  "black": #000000,
  "white": #ffffff,
  "gray-1": #2a2a2a,
  "gray-2": #545454,
  "gray-3": #7e7e7e,
  "gray-4": #f2f2f2,
  "success": #0f8a44,
  "success-bg": #d9f2e3,
  "error": #f20d0d,
  "error-bg": #fad1d1,
  "info": #2f80ed,
  "info-bg": #d0f1fb,
  "warning": #F2994A,
  "warning-bg": #FCE5D1
);

$color-primary-1: map-get($color, "primary-1");
$color-primary-2: map-get($color, "primary-2");
$color-primary-3: map-get($color, "primary-3");
$color-secondary-1: map-get($color, "secondary-1");
$color-secondary-2: map-get($color, "secondary-2");
$color-black: map-get($color, "black");
$color-white: map-get($color, "white");
$color-white-2: map-get($color, "gray-4"); // Dia mintanya f1f2f2, mirip banget ama gray-4
$color-gray-1: map-get($color, "gray-1");
$color-gray-2: map-get($color, "gray-2");
$color-gray-3: map-get($color, "gray-3");
$color-gray-4: map-get($color, "gray-4");

$color-success: map-get($color, "success");
$color-success-bg: map-get($color, "success-bg");
$color-error: map-get($color, "error");
$color-error-bg: map-get($color, "error-bg");
$color-info: map-get($color, "info");
$color-info-bg: map-get($color, "info-bg");
$color-warning: map-get($color, "warning");
$color-warning-bg: map-get($color, "warning-bg");

$color-primary-washed: lighten($color-primary-1, 68%);

@each $key, $value in $color {
  .color-#{$key} {
    color: $value !important;
  }

  .bg-color-#{$key} {
    background-color: $value !important;
  }
}

@mixin colorError($border-option: "border") {
  color: $color-error;
  background-color: $color-error-bg;
  
  @if $border-option == "border" {
    @include fluid("border-width", .1rem);
    border: solid;
    border-color: $color-error;
  }
}

@mixin colorSuccess($border-option: "border") {
  color: $color-success;
  background-color: $color-success-bg;
  
  @if $border-option == "border" {
    @include fluid("border-width", .1rem);
    border: solid;
    border-color: $color-success;
  }
}

@mixin colorInfo($border-option: "border") {
  color: $color-info;
  background-color: $color-info-bg;
  
  @if $border-option == "border" {
    @include fluid("border-width", .1rem);
    border: solid;
    border-color: $color-info;
  }
}

@mixin colorWarning($border-option: "border") {
  color: $color-warning;
  background-color: $color-warning-bg;
  
  @if $border-option == "border" {
    @include fluid("border-width", .1rem);
    border: solid;
    border-color: $color-warning;
  }
}

.status-style-error {@include colorError("")}
.status-style-info {@include colorInfo("")}
.status-style-warning {@include colorWarning("")}
.status-style-success {@include colorSuccess("")}

.status-style-error-bordered {@include colorError()}
.status-style-info-bordered {@include colorInfo()}
.status-style-warning-bordered {@include colorWarning()}
.status-style-success-bordered {@include colorSuccess()}